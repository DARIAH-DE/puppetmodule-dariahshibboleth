<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"    
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="180">

    <!--

         FILE MANAGED BY PUPPET !!!!

    -->

    <ApplicationDefaults entityID="https://<%= scope.lookupvar('::dariahshibboleth::hostname') %>/shibboleth"
                         REMOTE_USER="eppn persistent-id targeted-id"
                         <% if scope.lookupvar('::dariahshibboleth::federation') != '' %>sessionHook="<%= scope.lookupvar('::dariahshibboleth::handlerurl_prefix') %>/Shibboleth.sso/AttrChecker"<%end %>>

        <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                  checkAddress="false" handlerSSL="true" cookieProps="https"
                  handlerURL="<%= scope.lookupvar('::dariahshibboleth::handlerurl_prefix') %>/Shibboleth.sso">

<% if @federation_enabled %>
            <SSO discoveryProtocol="SAMLDS" discoveryURL="<%= scope.lookupvar('::dariahshibboleth::discoveryurl') %>">
              SAML2 
            </SSO>
<% else -%>
            <SSO entityID="<%= scope.lookupvar('::dariahshibboleth::idp_entityid') %>">
              SAML2
            </SSO>
<% end -%>

            <Logout>SAML2 Local</Logout>

            <Handler type="MetadataGenerator" Location="/Metadata" signing="false" />

            <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/>

            <Handler type="Session" Location="/Session" showAttributeValues="false"/>

            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>

<% if @federation_enabled %>
            <Handler type="AttributeChecker" Location="/AttrChecker" 
                     template="attrChecker.html" 
                     attributes="eppn mail givenName sn" 
                     flushSession="true"/>
<% end -%>

        </Sessions>

        <Errors supportContact="<%= scope.lookupvar('dariahcommon::adminmail') %>"
            helpLocation="/about.html"
            styleSheet="/shibboleth-sp/main.css"/>

<% if @dfn_metadata == 'Test' -%>
        <MetadataProvider type="XML" uri="https://www.aai.dfn.de/fileadmin/metadata/DFN-AAI-Test-metadata.xml"
                          backingFilePath="DFN-AAI-Test-metadata.xml" reloadInterval="7200">
<% else -%>
        <MetadataProvider type="XML" uri="https://www.aai.dfn.de/fileadmin/metadata/DFN-AAI-Basic-metadata.xml"
                          backingFilePath="DFN-AAI-Basic-metadata.xml" reloadInterval="3600">
<% end -%>
          <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
          <MetadataFilter type="Signature" certificate="/etc/shibboleth/dfn-aai.pem"/>
<% if not @federation_enabled %>
          <MetadataFilter type="Whitelist">
            <Include><%= scope.lookupvar('::dariahshibboleth::idp_entityid') %></Include>
          </MetadataFilter>
<% end -%>
        </MetadataProvider>

<% if @edugain_enabled and @dfn_metadata == 'Basic' and @federation_enabled -%>
        <MetadataProvider type="XML" uri="https://www.aai.dfn.de/fileadmin/metadata/DFN-AAI-eduGAIN-metadata.xml"
                          backingFilePath="DFN-AAI-eduGAIN-metadata.xml" reloadInterval="3600">
          <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
          <MetadataFilter type="Signature" certificate="/etc/shibboleth/dfn-aai.pem"/> 
        </MetadataProvider>
<% end -%>

        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>

        <AttributeResolver type="Query" subjectMatch="true"/>

<% if @federation_enabled -%>
        <AttributeResolver type="SimpleAggregation" 
                           attributeId="eppn"
                           format="urn:oid:1.3.6.1.4.1.5923.1.1.1.6">
          <Entity><%= scope.lookupvar('::dariahshibboleth::idp_entityid') %></Entity>
        </AttributeResolver>
<% end -%>

        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

    </ApplicationDefaults>

    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
